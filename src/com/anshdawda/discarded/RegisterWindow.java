/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.anshdawda.discarded;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import com.formdev.flatlaf.FlatDarkLaf;
import java.io.File;

/**
 *
 * @author anshd
 */
public class RegisterWindow extends javax.swing.JFrame {

    File image;
    /**
     * Creates new form Register
     */
    public RegisterWindow() {
        initComponents();
        image = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGender = new javax.swing.ButtonGroup();
        buttonGroupMaritalStatus = new javax.swing.ButtonGroup();
        title = new javax.swing.JTextPane();
        labelUsername = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        labelFirstName = new javax.swing.JLabel();
        labelLastName = new javax.swing.JLabel();
        textFieldUsername = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        buttonHelp = new javax.swing.JButton();
        toggleButtonPassword = new javax.swing.JButton();
        textFieldFirstName = new javax.swing.JTextField();
        textFieldLastName = new javax.swing.JTextField();
        labelGender = new javax.swing.JLabel();
        radioButtonMale = new javax.swing.JRadioButton();
        radioButtonFemale = new javax.swing.JRadioButton();
        radioButtonOther = new javax.swing.JRadioButton();
        labelMaritalStatus = new javax.swing.JLabel();
        radioButtonMarried = new javax.swing.JRadioButton();
        radioButtonUnmarried = new javax.swing.JRadioButton();
        radioButtonSeparated = new javax.swing.JRadioButton();
        labelAddress = new javax.swing.JLabel();
        scrollPane = new javax.swing.JScrollPane();
        textAreaAddress = new javax.swing.JTextArea();
        buttonClear = new javax.swing.JButton();
        buttonSubmit = new javax.swing.JButton();
        buttonExit = new javax.swing.JButton();
        separator = new javax.swing.JSeparator();
        labelClickHere = new javax.swing.JLabel();
        labelNewUser = new javax.swing.JLabel();
        avatarLabel = new javax.swing.JLabel();
        fileChooserButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Register");

        title.setEditable(false);
        title.setBorder(null);
        title.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        title.setText("Library\nManagement\nSystem");
        title.setAutoscrolls(false);
        title.setFocusable(false);
        title.setOpaque(false);

        labelUsername.setLabelFor(textFieldUsername);
        labelUsername.setText("Username:");
        labelUsername.setToolTipText("");

        labelPassword.setLabelFor(passwordField);
        labelPassword.setText("Password:");

        labelFirstName.setLabelFor(textFieldFirstName);
        labelFirstName.setText("First Name:");

        labelLastName.setLabelFor(textFieldLastName);
        labelLastName.setText("Last Name:");

        buttonHelp.setText("?");
        buttonHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHelpActionPerformed(evt);
            }
        });

        toggleButtonPassword.setText("Show Password");
        toggleButtonPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleButtonPasswordActionPerformed(evt);
            }
        });

        labelGender.setText("Gender:");

        buttonGroupGender.add(radioButtonMale);
        radioButtonMale.setText("Male");

        buttonGroupGender.add(radioButtonFemale);
        radioButtonFemale.setText("Female");

        buttonGroupGender.add(radioButtonOther);
        radioButtonOther.setText("Other");

        labelMaritalStatus.setText("Marital Status:");

        buttonGroupMaritalStatus.add(radioButtonMarried);
        radioButtonMarried.setText("Married");

        buttonGroupMaritalStatus.add(radioButtonUnmarried);
        radioButtonUnmarried.setText("Unmarried");

        buttonGroupMaritalStatus.add(radioButtonSeparated);
        radioButtonSeparated.setText("Separated");

        labelAddress.setLabelFor(textAreaAddress);
        labelAddress.setText("Address:");

        textAreaAddress.setColumns(20);
        textAreaAddress.setRows(5);
        scrollPane.setViewportView(textAreaAddress);

        buttonClear.setText("Clear");
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        buttonSubmit.setText("Submit");
        buttonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSubmitActionPerformed(evt);
            }
        });

        buttonExit.setText("Exit");
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });

        separator.setOrientation(javax.swing.SwingConstants.VERTICAL);
        separator.setRequestFocusEnabled(false);
        separator.setVerifyInputWhenFocusTarget(false);

        labelClickHere.setText("Click Here");
        labelClickHere.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        labelClickHere.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelClickHereMouseClicked(evt);
            }
        });

        labelNewUser.setText("Existing User?");

        avatarLabel.setText("Avatar:");

        fileChooserButton.setText("Choose image");
        fileChooserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonHelp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelLastName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldUsername)
                            .addComponent(passwordField)
                            .addComponent(textFieldFirstName)
                            .addComponent(textFieldLastName)
                            .addComponent(toggleButtonPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(labelNewUser)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelClickHere)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(avatarLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(200, 200, 200))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonClear)
                                .addGap(12, 12, 12)
                                .addComponent(buttonSubmit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonExit))
                            .addComponent(labelGender)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radioButtonMale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioButtonFemale)
                                .addGap(12, 12, 12)
                                .addComponent(radioButtonOther))
                            .addComponent(labelMaritalStatus)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radioButtonMarried)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioButtonUnmarried)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioButtonSeparated))
                            .addComponent(labelAddress)
                            .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fileChooserButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelUsername)
                                .addComponent(textFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelPassword))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(toggleButtonPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonHelp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelFirstName)
                                .addComponent(textFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelLastName)
                                .addComponent(textFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(separator, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelGender)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioButtonMale)
                            .addComponent(radioButtonFemale)
                            .addComponent(radioButtonOther))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelMaritalStatus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioButtonMarried)
                            .addComponent(radioButtonUnmarried)
                            .addComponent(radioButtonSeparated))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelAddress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(avatarLabel)
                            .addComponent(fileChooserButton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonClear)
                    .addComponent(buttonSubmit)
                    .addComponent(buttonExit)
                    .addComponent(labelNewUser)
                    .addComponent(labelClickHere))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHelpActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(
                null,
                "Username:\n"
                + "1. The username length should have greater than 6 and less than 25 characters.\n"
                + "2. The username shouldn't contain any spances.\n"
                + "\n"
                + "Password:\n"
                + "1. The password should be atleast 8 characters long.\n"
                + "2. The password should contain atleast one uppercase letter.\n"
                + "3. The password should contain atleast one of the following symbols - '!', '@' and/or '#'.",
                "Username & Password help",
                JOptionPane.QUESTION_MESSAGE
        );
    }//GEN-LAST:event_buttonHelpActionPerformed

    private void toggleButtonPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleButtonPasswordActionPerformed
        // TODO add your handling code here:
        if (passwordField.getEchoChar() == (char) 0) {
            passwordField.setEchoChar('\u2022');
            toggleButtonPassword.setText("Show Password");
        } else {
            passwordField.setEchoChar((char) 0);
            toggleButtonPassword.setText("Hide Password");
        }
    }//GEN-LAST:event_toggleButtonPasswordActionPerformed

    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(buttonClear, "Are you sure?", "Clear", JOptionPane.YES_NO_OPTION) == 0) {
            textFieldUsername.setText("");
            passwordField.setText("");
            textFieldFirstName.setText("");
            textFieldLastName.setText("");
            buttonGroupGender.clearSelection();
            buttonGroupMaritalStatus.clearSelection();
            textAreaAddress.setText("");
            fileChooserButton.setText("Choose Image");
        }
    }//GEN-LAST:event_buttonClearActionPerformed

    private void buttonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSubmitActionPerformed
        // TODO add your handling code here:
        String username = textFieldUsername.getText();
        String password = String.valueOf(passwordField.getPassword());
        boolean areAllFieldsFilled
                = !username.isBlank()
                && !password.isBlank()
                && !textFieldFirstName.getText().isBlank()
                && !textFieldLastName.getText().isBlank()
                && buttonGroupGender.getSelection() != null
                && buttonGroupMaritalStatus.getSelection() != null
                && !textAreaAddress.getText().isBlank();
        if (areAllFieldsFilled) {
            String passwordMessage = isValidPassword(password);
            if (!isValidUsername(username)) {
                JOptionPane.showMessageDialog(
                        buttonSubmit,
                        "Username's length should be between 6 and 25 characters.",
                        "Invalid Username",
                        JOptionPane.ERROR_MESSAGE
                );
            } else if (passwordMessage != null) {
                JOptionPane.showMessageDialog(
                        buttonSubmit,
                        passwordMessage,
                        "Invalid Password",
                        JOptionPane.ERROR_MESSAGE
                );
            } else {
                JOptionPane.showMessageDialog(
                        buttonSubmit,
                        "Registered Successfully!",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE
                );
            }
        } else {
            JOptionPane.showMessageDialog(
                    buttonSubmit,
                    "The form data is missing.",
                    "Empty fields",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_buttonSubmitActionPerformed

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(buttonExit, "Are you sure?", "Exit", JOptionPane.YES_NO_OPTION) == 0) {
            System.exit(ABORT);
        }
    }//GEN-LAST:event_buttonExitActionPerformed

    private void labelClickHereMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelClickHereMouseClicked
        // TODO add your handling code here:
        new LoginWindow().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_labelClickHereMouseClicked

    private void fileChooserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Profile Pictures", "jpg", "jpeg", "png");
        fileChooser.setFileFilter(filter);
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            image = fileChooser.getSelectedFile();
            fileChooserButton.setText("Choose Image (" + image.getName() + ")");
        }
    }//GEN-LAST:event_fileChooserButtonActionPerformed

    boolean isValidUsername(String username) {
        return (6 <= username.length() && username.length() <= 25);
    }

    String isValidPassword(String password) {
        // password length check
        if (password.length() < 8) {
            return "Password length should be at least 8 characters long.";
        }
        // password uppercase check
        if (password.chars().filter(Character::isUpperCase).findAny().isEmpty()) {
            return "Password should contain at least on upper case letter.";
        }
        // password symbol check
        if (!(password.contains("!") || password.contains("@") || password.contains("#"))) {
            return "Password should contain at least one of the following symbols - '!', '@' or '#'.";
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatDarkLaf.setup();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new RegisterWindow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avatarLabel;
    private javax.swing.JButton buttonClear;
    private javax.swing.JButton buttonExit;
    private javax.swing.ButtonGroup buttonGroupGender;
    private javax.swing.ButtonGroup buttonGroupMaritalStatus;
    private javax.swing.JButton buttonHelp;
    private javax.swing.JButton buttonSubmit;
    private javax.swing.JButton fileChooserButton;
    private javax.swing.JLabel labelAddress;
    private javax.swing.JLabel labelClickHere;
    private javax.swing.JLabel labelFirstName;
    private javax.swing.JLabel labelGender;
    private javax.swing.JLabel labelLastName;
    private javax.swing.JLabel labelMaritalStatus;
    private javax.swing.JLabel labelNewUser;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JRadioButton radioButtonFemale;
    private javax.swing.JRadioButton radioButtonMale;
    private javax.swing.JRadioButton radioButtonMarried;
    private javax.swing.JRadioButton radioButtonOther;
    private javax.swing.JRadioButton radioButtonSeparated;
    private javax.swing.JRadioButton radioButtonUnmarried;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JSeparator separator;
    private javax.swing.JTextArea textAreaAddress;
    private javax.swing.JTextField textFieldFirstName;
    private javax.swing.JTextField textFieldLastName;
    private javax.swing.JTextField textFieldUsername;
    private javax.swing.JTextPane title;
    private javax.swing.JButton toggleButtonPassword;
    // End of variables declaration//GEN-END:variables
}
