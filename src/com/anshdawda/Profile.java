/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.anshdawda;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author anshd
 */
public class Profile extends javax.swing.JInternalFrame {

    User user;

    /**
     * Creates new form Profile
     */
    public Profile() {
        user = User.getInstance();
        initComponents();
        profileLabel.setIcon(user.getAvatarImage(170, 170));
        usernameTextField.setEditable(false);
        nameTextField.setEditable(false);
        genderTextField.setEditable(false);
        maritalStatusTextField.setEditable(false);
        addressTextArea.setEditable(false);
        privilegeComboBox.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        profileLabel = new javax.swing.JLabel();
        separator = new javax.swing.JSeparator();
        usernameLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        genderTextField = new javax.swing.JTextField();
        maritalStatusLabel = new javax.swing.JLabel();
        maritalStatusTextField = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        addressScrollPane = new javax.swing.JScrollPane();
        addressTextArea = new javax.swing.JTextArea();
        changePasswordButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        booksScrollPane = new javax.swing.JScrollPane();
        privilegeComboBox = new javax.swing.JComboBox<>();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        profileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        profileLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileLabelMouseClicked(evt);
            }
        });

        separator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        usernameLabel.setText("Username:");

        usernameTextField.setText(user.getUsername());
        usernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextFieldActionPerformed(evt);
            }
        });

        nameLabel.setText("Name:");

        nameTextField.setText(user.getFirstName() + " " + user.getLastName());
        nameTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nameTextFieldMouseClicked(evt);
            }
        });

        genderLabel.setText("Gender:");

        genderTextField.setText(user.getGender());
        genderTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                genderTextFieldMouseClicked(evt);
            }
        });

        maritalStatusLabel.setText("Marital Status:");

        maritalStatusTextField.setText(user.getMaritalStatus());
        maritalStatusTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                maritalStatusTextFieldMouseClicked(evt);
            }
        });

        addressLabel.setText("Address:");

        addressTextArea.setEditable(false);
        addressTextArea.setColumns(20);
        addressTextArea.setLineWrap(true);
        addressTextArea.setRows(5);
        addressTextArea.setText(user.getAddress());
        addressScrollPane.setViewportView(addressTextArea);

        changePasswordButton.setText("Change Password?");
        changePasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        booksScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        privilegeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Member", "Staff", "Admin" }));
        privilegeComboBox.setSelectedIndex(user.getPRIVILEGE());

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(booksScrollPane)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(profileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(privilegeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maritalStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maritalStatusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(genderTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addComponent(nameTextField)
                            .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(genderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(usernameTextField)
                            .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(addressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(147, 147, 147))
                            .addComponent(addressScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(changePasswordButton)
                                .addGap(18, 18, 18)
                                .addComponent(editButton)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        panelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {genderLabel, genderTextField, maritalStatusLabel, maritalStatusTextField, nameLabel, nameTextField, usernameLabel, usernameTextField});

        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(separator)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(panelLayout.createSequentialGroup()
                                    .addComponent(usernameLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(nameLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(genderLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(genderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(14, 14, 14)
                                    .addComponent(maritalStatusLabel)
                                    .addGap(28, 28, 28))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                                    .addComponent(addressLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(addressScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(maritalStatusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(editButton)
                                        .addComponent(changePasswordButton)
                                        .addComponent(privilegeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(profileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 4, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(booksScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changePasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordButtonActionPerformed
        // TODO add your handling code here:
        String password = JOptionPane.showInputDialog("Enter current password");
        if (password.equals(user.getPassword())) {
            String newPassword = JOptionPane.showInputDialog("Enter new password");
            String check = isValidPassword(newPassword);
            if (check == null) {
                user.setPassword(newPassword);
            } else {
                JOptionPane.showMessageDialog(
                        null,
                        check,
                        "Invalid Password",
                        JOptionPane.ERROR_MESSAGE
                );
            }
        } else {
            JOptionPane.showMessageDialog(null, "Incorrect password!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_changePasswordButtonActionPerformed

    private void profileLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileLabelMouseClicked
        // TODO add your handling code here:
        if (editButton.getText().equals("Save")) {
            JFileChooser fileChooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Profile Pictures", "jpg", "jpeg", "png");
            fileChooser.setFileFilter(filter);
            int returnValue = fileChooser.showOpenDialog(null);
            if (returnValue == JFileChooser.APPROVE_OPTION) {
                user.setAvatar(fileChooser.getSelectedFile());
                profileLabel.setIcon(user.getAvatarImage(170, 170));
            }
        }
    }//GEN-LAST:event_profileLabelMouseClicked

    private void usernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextFieldActionPerformed
        // TODO add your handling code here:
        if (editButton.getText().equals("Save")) {
            user.setUsername(usernameTextField.getText());
        }
    }//GEN-LAST:event_usernameTextFieldActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        if (editButton.getText().equals("Edit")) {
            editButton.setText("Save");
            usernameTextField.setEditable(true);
            nameTextField.setEditable(true);
            genderTextField.setEditable(true);
            maritalStatusTextField.setEditable(true);
            addressTextArea.setEditable(true);
            privilegeComboBox.setEnabled(true);
        } else {
            editButton.setText("Edit");
            usernameTextField.setEditable(false);
            nameTextField.setEditable(false);
            genderTextField.setEditable(false);
            maritalStatusTextField.setEditable(false);
            addressTextArea.setEditable(false);
            privilegeComboBox.setEnabled(false);
            user.setAddress(addressTextArea.getText());
            user.setUsername(usernameTextField.getText());
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void nameTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameTextFieldMouseClicked
        // TODO add your handling code here:
        if (editButton.getText().equals("Save")) {
            String firstName = JOptionPane.showInputDialog("First Name", user.getFirstName());
            String lastName = JOptionPane.showInputDialog("Last Name", user.getLastName());
            if (firstName.isBlank() || lastName.isBlank()) {
                int choice = JOptionPane.showConfirmDialog(null, "Empty fields found. Are you sure?", "Warning", JOptionPane.WARNING_MESSAGE);
                if (choice == 0) {
                    user.setFirstName(firstName);
                    user.setLastName(lastName);
                }
            }
            user.setFirstName(firstName);
            user.setLastName(lastName);
            nameTextField.setText(user.getFirstName() + " " + user.getLastName());
        }
    }//GEN-LAST:event_nameTextFieldMouseClicked

    private void genderTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genderTextFieldMouseClicked
        // TODO add your handling code here:
        if (editButton.getText().equals("Save")) {
            String[] genders = {"Male", "Female", "Other"};
            int genderIndex;
            switch (user.getGender()) {
                case "Male":
                    genderIndex = 0;
                    break;
                case "Female":
                    genderIndex = 1;
                    break;
                default:
                    genderIndex = 2;
                    break;
            }
            genderIndex = JOptionPane.showOptionDialog(null,
                    "Select gender:",
                    "Gender",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE,
                    null,
                    genders,
                    genders[genderIndex]
            );
            if (genderIndex != -1) {
                user.setGender(genders[genderIndex]);
                genderTextField.setText(user.getGender());
            }
        }
    }//GEN-LAST:event_genderTextFieldMouseClicked

    private void maritalStatusTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maritalStatusTextFieldMouseClicked
        // TODO add your handling code here:
        if (editButton.getText().equals("Save")) {
            String[] statuses = {"Married", "Unmarried", "Separated"};
            int statusIndex;
            switch (user.getMaritalStatus()) {
                case "Married":
                    statusIndex = 0;
                    break;
                case "Unmarried":
                    statusIndex = 1;
                    break;
                default:
                    statusIndex = 2;
                    break;
            }
            statusIndex = JOptionPane.showOptionDialog(
                    null,
                    "Select marital Status:",
                    "Marital Status",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.PLAIN_MESSAGE,
                    null,
                    statuses,
                    statuses[statusIndex]
            );
            if (statusIndex != -1) {
                user.setMaritalStatus(statuses[statusIndex]);
                maritalStatusTextField.setText(user.getMaritalStatus());
            }
        }
    }//GEN-LAST:event_maritalStatusTextFieldMouseClicked

    String isValidPassword(String password) {
        // password length check
        if (password.length() < 8) {
            return "Password length should be at least 8 characters long.";
        }
        // password uppercase check
        if (password.chars().filter(Character::isUpperCase).findAny().isEmpty()) {
            return "Password should contain at least on upper case letter.";
        }
        // password symbol check
        if (!(password.contains("!") || password.contains("@") || password.contains("#"))) {
            return "Password should contain at least one of the following symbols - '!', '@' or '#'.";
        }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JScrollPane addressScrollPane;
    private javax.swing.JTextArea addressTextArea;
    private javax.swing.JScrollPane booksScrollPane;
    private javax.swing.JButton changePasswordButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JTextField genderTextField;
    private javax.swing.JLabel maritalStatusLabel;
    private javax.swing.JTextField maritalStatusTextField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JPanel panel;
    private javax.swing.JComboBox<String> privilegeComboBox;
    private javax.swing.JLabel profileLabel;
    private javax.swing.JSeparator separator;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
