/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.anshdawda;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author anshd
 */
public class Register extends javax.swing.JInternalFrame {

    File image;

    /**
     * Creates new form Register
     */
    public Register() {
        image = null;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGender = new javax.swing.ButtonGroup();
        buttonGroupMaritalStatus = new javax.swing.ButtonGroup();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        separator = new javax.swing.JSeparator();
        clickHereLabel = new javax.swing.JLabel();
        newUserLabel = new javax.swing.JLabel();
        avatarLabel = new javax.swing.JLabel();
        fileChooserButton = new javax.swing.JButton();
        firstNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        helpButton = new javax.swing.JButton();
        showPasswordButton = new javax.swing.JButton();
        firstNameTextField = new javax.swing.JTextField();
        lastNameTextField = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        maleRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        otherRadioButton = new javax.swing.JRadioButton();
        maritalStatusLabel = new javax.swing.JLabel();
        marriedRadioButton = new javax.swing.JRadioButton();
        unmarriedRadioButton = new javax.swing.JRadioButton();
        separatedRadioButton = new javax.swing.JRadioButton();
        addressLabel = new javax.swing.JLabel();
        scrollPane = new javax.swing.JScrollPane();
        addressTextArea = new javax.swing.JTextArea();
        clearButton = new javax.swing.JButton();
        titleTextPane = new javax.swing.JTextPane();
        labelLabel = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox<>();
        previewImageButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setTitle("Register");

        usernameLabel.setText("Username:");
        usernameLabel.setToolTipText("");

        passwordLabel.setText("Password:");

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        separator.setOrientation(javax.swing.SwingConstants.VERTICAL);
        separator.setRequestFocusEnabled(false);
        separator.setVerifyInputWhenFocusTarget(false);

        clickHereLabel.setText("Click Here");
        clickHereLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        clickHereLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickHereLabelMouseClicked(evt);
            }
        });

        newUserLabel.setText("Existing User?");

        avatarLabel.setText("Avatar:");

        fileChooserButton.setText("Choose image");
        fileChooserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserButtonActionPerformed(evt);
            }
        });

        firstNameLabel.setText("First Name:");

        lastNameLabel.setText("Last Name:");

        helpButton.setText("?");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        showPasswordButton.setText("Show Password");
        showPasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPasswordButtonActionPerformed(evt);
            }
        });

        genderLabel.setText("Gender:");

        buttonGroupGender.add(maleRadioButton);
        maleRadioButton.setText("Male");
        maleRadioButton.setActionCommand(maleRadioButton.getText());

        buttonGroupGender.add(femaleRadioButton);
        femaleRadioButton.setText("Female");
        femaleRadioButton.setActionCommand(femaleRadioButton.getText());

        buttonGroupGender.add(otherRadioButton);
        otherRadioButton.setText("Other");
        otherRadioButton.setActionCommand(otherRadioButton.getText());

        maritalStatusLabel.setText("Marital Status:");

        buttonGroupMaritalStatus.add(marriedRadioButton);
        marriedRadioButton.setText("Married");
        marriedRadioButton.setActionCommand(marriedRadioButton.getText());

        buttonGroupMaritalStatus.add(unmarriedRadioButton);
        unmarriedRadioButton.setText("Unmarried");
        unmarriedRadioButton.setActionCommand(unmarriedRadioButton.getText());

        buttonGroupMaritalStatus.add(separatedRadioButton);
        separatedRadioButton.setText("Separated");
        separatedRadioButton.setActionCommand(separatedRadioButton.getText());

        addressLabel.setText("Address:");

        addressTextArea.setColumns(20);
        addressTextArea.setRows(5);
        scrollPane.setViewportView(addressTextArea);

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        titleTextPane.setEditable(false);
        titleTextPane.setBorder(null);
        titleTextPane.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        titleTextPane.setText("Library\nManagement\nSystem");
        titleTextPane.setAutoscrolls(false);
        titleTextPane.setFocusable(false);
        titleTextPane.setOpaque(false);

        labelLabel.setText("Type:");

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Member", "Staff", "Admin" }));

        previewImageButton.setText("Preview image");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleTextPane, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(helpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showPasswordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(firstNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lastNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(usernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(passwordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(newUserLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clickHereLabel)))
                .addGap(12, 12, 12)
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(avatarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileChooserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(clearButton)
                        .addGap(12, 12, 12)
                        .addComponent(submitButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exitButton))
                    .addComponent(genderLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(maleRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(femaleRadioButton)
                        .addGap(12, 12, 12)
                        .addComponent(otherRadioButton))
                    .addComponent(previewImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maritalStatusLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(marriedRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(unmarriedRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(separatedRadioButton))
                    .addComponent(addressLabel)
                    .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {firstNameLabel, labelLabel, lastNameLabel, passwordLabel, usernameLabel});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {firstNameTextField, lastNameTextField, passwordField, showPasswordButton, typeComboBox, usernameTextField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(titleTextPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(usernameLabel)
                                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(passwordLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(showPasswordButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(helpButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(firstNameLabel)
                                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lastNameLabel)
                                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelLabel)
                                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(genderLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(maleRadioButton)
                                    .addComponent(femaleRadioButton)
                                    .addComponent(otherRadioButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(maritalStatusLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(marriedRadioButton)
                                    .addComponent(unmarriedRadioButton)
                                    .addComponent(separatedRadioButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addressLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(avatarLabel)
                                    .addComponent(fileChooserButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(previewImageButton)))
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearButton)
                    .addComponent(submitButton)
                    .addComponent(exitButton)
                    .addComponent(newUserLabel)
                    .addComponent(clickHereLabel)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        String username = usernameTextField.getText();
        String password = String.valueOf(passwordField.getPassword());
        boolean areAllFieldsFilled
                = !username.isBlank()
                && !password.isBlank()
                && !firstNameTextField.getText().isBlank()
                && !lastNameTextField.getText().isBlank()
                && buttonGroupGender.getSelection() != null
                && buttonGroupMaritalStatus.getSelection() != null
                && !addressTextArea.getText().isBlank();
        if (areAllFieldsFilled) {
            String passwordMessage = isValidPassword(password);
            if (!isValidUsername(username)) {
                JOptionPane.showMessageDialog(submitButton,
                        "Username's length should be between 6 and 25 characters.",
                        "Invalid Username",
                        JOptionPane.ERROR_MESSAGE
                );
            } else if (passwordMessage != null) {
                JOptionPane.showMessageDialog(submitButton,
                        passwordMessage,
                        "Invalid Password",
                        JOptionPane.ERROR_MESSAGE
                );
            } else {
                User user = User.getInstance();
                System.out.println(buttonGroupGender.getSelection().getActionCommand());
                System.out.println(buttonGroupMaritalStatus.getSelection().getActionCommand());
                if (image == null) {
                    user.setUser(
                            typeComboBox.getSelectedIndex() == -1 ? 0 : typeComboBox.getSelectedIndex(),
                            username,
                            firstNameTextField.getText(),
                            lastNameTextField.getText(),
                            buttonGroupGender.getSelection().getActionCommand(),
                            buttonGroupMaritalStatus.getSelection().getActionCommand(),
                            addressTextArea.getText(),
                            password
                    );
                } else {
                    user.setUser(
                            typeComboBox.getSelectedIndex() == -1 ? 0 : typeComboBox.getSelectedIndex(),
                            username,
                            firstNameTextField.getText(),
                            lastNameTextField.getText(),
                            buttonGroupGender.getSelection().getActionCommand(),
                            buttonGroupMaritalStatus.getSelection().getActionCommand(),
                            addressTextArea.getText(),
                            password,
                            image
                    );
                }
                JOptionPane.showMessageDialog(submitButton,
                        "Registered Successfully!",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE
                );
                dispose();
            }
        } else {
            JOptionPane.showMessageDialog(submitButton,
                    "The form data is missing.",
                    "Empty fields",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(exitButton, "Are you sure?", "Exit", JOptionPane.YES_NO_OPTION) == 0) {
            dispose();
        }
    }//GEN-LAST:event_exitButtonActionPerformed

    private void clickHereLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickHereLabelMouseClicked
        // TODO add your handling code here:
        Login login = new Login();
        getParent().add(login);
        login.setSize(getParent().getWidth(), getParent().getHeight());
        login.setLocation(0, 0);
        login.setVisible(true);
        dispose();
    }//GEN-LAST:event_clickHereLabelMouseClicked

    private void fileChooserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Profile Pictures", "jpg", "jpeg", "png");
        fileChooser.setFileFilter(filter);
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            image = fileChooser.getSelectedFile();
            fileChooserButton.setText("Choose Image (" + image.getName() + ")");
        }
    }//GEN-LAST:event_fileChooserButtonActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(
                null,
                "Username:\n"
                + "1. The username length should have greater than 6 and less than 25 characters.\n"
                + "2. The username shouldn't contain any spances.\n"
                + "\n"
                + "Password:\n"
                + "1. The password should be atleast 8 characters long.\n"
                + "2. The password should contain atleast one uppercase letter.\n"
                + "3. The password should contain atleast one of the following symbols - '!', '@' and/or '#'.",
                "Username & Password help",
                JOptionPane.QUESTION_MESSAGE
        );
    }//GEN-LAST:event_helpButtonActionPerformed

    private void showPasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPasswordButtonActionPerformed
        // TODO add your handling code here:
        if (passwordField.getEchoChar() == (char) 0) {
            passwordField.setEchoChar('\u2022');
            showPasswordButton.setText("Show Password");
        } else {
            passwordField.setEchoChar((char) 0);
            showPasswordButton.setText("Hide Password");
        }
    }//GEN-LAST:event_showPasswordButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(clearButton, "Are you sure?", "Clear", JOptionPane.YES_NO_OPTION) == 0) {
            usernameTextField.setText("");
            passwordField.setText("");
            firstNameTextField.setText("");
            lastNameTextField.setText("");
            buttonGroupGender.clearSelection();
            buttonGroupMaritalStatus.clearSelection();
            addressTextArea.setText("");
            fileChooserButton.setText("Choose Image");
        }
    }//GEN-LAST:event_clearButtonActionPerformed

    boolean isValidUsername(String username) {
        return (6 <= username.length() && username.length() <= 25);
    }

    String isValidPassword(String password) {
        // password length check
        if (password.length() < 8) {
            return "Password length should be at least 8 characters long.";
        }
        // password uppercase check
        if (password.chars().filter(Character::isUpperCase).findAny().isEmpty()) {
            return "Password should contain at least on upper case letter.";
        }
        // password symbol check
        if (!(password.contains("!") || password.contains("@") || password.contains("#"))) {
            return "Password should contain at least one of the following symbols - '!', '@' or '#'.";
        }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextArea addressTextArea;
    private javax.swing.JLabel avatarLabel;
    private javax.swing.ButtonGroup buttonGroupGender;
    private javax.swing.ButtonGroup buttonGroupMaritalStatus;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel clickHereLabel;
    private javax.swing.JButton exitButton;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JButton fileChooserButton;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JButton helpButton;
    private javax.swing.JLabel labelLabel;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JLabel maritalStatusLabel;
    private javax.swing.JRadioButton marriedRadioButton;
    private javax.swing.JLabel newUserLabel;
    private javax.swing.JRadioButton otherRadioButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JButton previewImageButton;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JRadioButton separatedRadioButton;
    private javax.swing.JSeparator separator;
    private javax.swing.JButton showPasswordButton;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextPane titleTextPane;
    private javax.swing.JComboBox<String> typeComboBox;
    private javax.swing.JRadioButton unmarriedRadioButton;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
